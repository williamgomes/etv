<?php

namespace EssentialTv\EtvBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\ResultSetMapping;

/**
 * RegisterRepository
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UsersRepository extends EntityRepository {

    /**
     * Get Reaction & Response against that reaction
     *
     * @return \EssentialTv\EtvBundle\Entity\Characters 
     */
    public function getAllRows() {
        $query = $this->getEntityManager()
                ->createQueryBuilder()
                ->select("U")
//                ->addSelect("COUNT(USSE.usseId) AS TotalShowView")
                ->from('EssentialTvEtvBundle:Users', 'U')
//                ->leftJoin("EssentialTvEtvBundle:UserShowSeasonEpisode", "USSE", "WITH", "USSE.usseUserId=U.userId")
                ->orderBy('U.userFirstName', 'ASC');

        $strQuery = $query->getQuery();

        return $strQuery->execute();
    }
    
    
    public function userSearchResult($keyword) {
        $query = $this->getEntityManager()
                ->createQueryBuilder()
                ->select("U")
//                ->addSelect("COUNT(USSE.usseId) AS TotalShowView")
                ->from('EssentialTvEtvBundle:Users', 'U')
//                ->leftJoin("EssentialTvEtvBundle:UserShowSeasonEpisode", "USSE", "WITH", "USSE.usseUserId=U.userId")
                ->where("U.userFirstName LIKE :keyword")
                ->orWhere("U.userLastName LIKE :keyword")
                ->setParameter("keyword", "%" . $keyword . "%")
                ->orderBy('U.userFirstName', 'ASC');

        $strQuery = $query->getQuery();

        return $strQuery->execute();
    }
    
    
    public function logActivity($user,$type,$id)
    {
        $em = $this->getEntityManager();
        $dateTimeNow = date_create(date("Y-m-d H:i:s"));
        $activity = new UserRecentViews();
        $activity->setUrvElementId($id);
        $activity->setUrvUserId($user);
        $activity->setUrvElementType($type);
        $activity->setUrvViewedOn($dateTimeNow);
        $em->persist($activity);
        $em->flush();
        
    }

}
